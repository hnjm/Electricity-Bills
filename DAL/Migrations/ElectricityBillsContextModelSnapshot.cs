// <auto-generated />
using System;
using DAL.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace DAL.Migrations
{
    [DbContext(typeof(ElectricityBillsContext))]
    partial class ElectricityBillsContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.2-rtm-30932")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("DAL.Models.CounterReads", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CustomerId");

                    b.Property<DateTime?>("DateOfRead")
                        .HasColumnType("date");

                    b.Property<string>("Note");

                    b.Property<long?>("TheRead");

                    b.HasKey("Id");

                    b.HasIndex("CustomerId");

                    b.ToTable("CounterReads");
                });

            modelBuilder.Entity("DAL.Models.Customer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CounterNumber");

                    b.Property<string>("CustomerMobile");

                    b.Property<string>("CustomerName")
                        .HasMaxLength(50);

                    b.Property<bool?>("CustomerStatue");

                    b.Property<decimal?>("LastBalance")
                        .HasColumnType("decimal(8, 2)");

                    b.Property<int?>("LineId");

                    b.Property<int?>("MinimumAmount");

                    b.HasKey("Id");

                    b.HasIndex("LineId");

                    b.ToTable("Customer");
                });

            modelBuilder.Entity("DAL.Models.CustomerBills", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal?>("BillAmount")
                        .HasColumnType("decimal(8, 2)");

                    b.Property<long?>("CurrentRead");

                    b.Property<int?>("CustomerId");

                    b.Property<DateTime?>("DateOfLastRead")
                        .HasColumnType("date");

                    b.Property<decimal?>("Discount")
                        .HasColumnType("decimal(8, 2)");

                    b.Property<decimal?>("LastBalance")
                        .HasColumnType("decimal(8, 2)");

                    b.Property<long?>("LastRead");

                    b.Property<int?>("LineId");

                    b.Property<decimal?>("MaintenanceFees")
                        .HasColumnType("decimal(8, 2)");

                    b.Property<int?>("MinimunAmount");

                    b.Property<string>("Notes");

                    b.Property<string>("PeriodOfBill")
                        .HasMaxLength(50);

                    b.Property<decimal?>("ServicesFees")
                        .HasColumnType("decimal(8, 2)");

                    b.Property<decimal?>("UnitPrice")
                        .HasColumnType("decimal(8, 2)");

                    b.HasKey("Id");

                    b.HasIndex("CustomerId");

                    b.HasIndex("LineId");

                    b.ToTable("CustomerBills");
                });

            modelBuilder.Entity("DAL.Models.Line", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("LineName")
                        .HasMaxLength(50);

                    b.Property<decimal?>("UnitPrice")
                        .HasColumnType("decimal(8, 2)");

                    b.HasKey("Id");

                    b.ToTable("Line");
                });

            modelBuilder.Entity("DAL.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("PassWord");

                    b.Property<string>("UserName");

                    b.HasKey("Id");

                    b.ToTable("User");
                });

            modelBuilder.Entity("DAL.Models.CounterReads", b =>
                {
                    b.HasOne("DAL.Models.Customer", "Customer")
                        .WithMany("CounterReads")
                        .HasForeignKey("CustomerId")
                        .HasConstraintName("FK_CounterReads_Customer")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("DAL.Models.Customer", b =>
                {
                    b.HasOne("DAL.Models.Line", "Line")
                        .WithMany("Customer")
                        .HasForeignKey("LineId")
                        .HasConstraintName("FK_Customer_Line")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("DAL.Models.CustomerBills", b =>
                {
                    b.HasOne("DAL.Models.Customer", "Customer")
                        .WithMany("CustomerBills")
                        .HasForeignKey("CustomerId")
                        .HasConstraintName("FK_CustomerBills_Customer")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("DAL.Models.Line", "Line")
                        .WithMany("CustomerBills")
                        .HasForeignKey("LineId")
                        .HasConstraintName("FK_CustomerBills_Line");
                });
#pragma warning restore 612, 618
        }
    }
}
